name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./Vehicles.csproj

      - name: Build
        run: dotnet build --configuration Release ./Vehicles.csproj

      - name: Publish
        run: dotnet publish Vehicles.csproj -c Release -r linux-x64 --self-contained -o ./publish/vehicles

      - name: Package Deployment Bundle
        run: |
          cd ./publish/vehicles
          zip -r ../../Vehicles-deployment.zip *

      - name: Upload to EC2
        uses: appleboy/scp-action@v0.0.8
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: Vehicles-deployment.zip
          target: /home/ubuntu/

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Unzip the deployment bundle
            cd /home/ubuntu
            unzip Vehicles-deployment.zip -d Vehicles-deployment

            # Stop the old application service
            sudo systemctl stop myapp.service || true

            # Remove old files (optional)
            sudo rm -rf /var/www/myapp/*

            # Copy new files to the application directory
            sudo cp -r /home/ubuntu/Vehicles-deployment/* /var/www/myapp/

            # Start the application
            sudo systemctl start myapp.service

      # - name: Clean up
      #   run: rm -f Vehicles-deployment.zip
